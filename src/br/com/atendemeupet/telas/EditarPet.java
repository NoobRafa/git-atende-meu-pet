/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atendemeupet.telas;

import br.com.atendemeupet.dao.PetDAO;
import br.com.atendemeupet.dao.ReservaDAO;
import br.com.atendemeupet.dao.UsuarioDAO;
import br.com.atendemeupet.entidades.Pet;
import br.com.atendemeupet.entidades.Reserva;
import br.com.atendemeupet.entidades.Usuario;
import br.com.atendemeupet.modelos.PetTableModel;
import br.com.atendemeupet.modelos.UsuarioTableModel;
import br.com.atendemeupet.util.JpaUtil;
import java.text.NumberFormat;
import java.util.Arrays;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Rafael Vieira
 */
public class EditarPet extends javax.swing.JInternalFrame {

    /**
     * Creates new form EditarPet
     */
    private static EditarPet editarPet;

    private PetDAO pdao = new PetDAO(JpaUtil.getEM());
    private UsuarioDAO udao = new UsuarioDAO(JpaUtil.getEM());
    private List<Pet> listaPets = pdao.listarPets();
    private PetTableModel modeloPet = new PetTableModel(listaPets);
    private List<Usuario> listaUsuarios = udao.listarUsuariosPets();
    private UsuarioTableModel modeloUsuario = new UsuarioTableModel(listaUsuarios);

    private NumberFormat formato = NumberFormat.getNumberInstance();

    private EditarPet() {
        initComponents();
        tabelaPet.setVisible(false);
    }

    public static synchronized EditarPet getInstance() {
        if (editarPet == null) {
            editarPet = new EditarPet();
        }
        return editarPet;
    }

    @Override
    public void dispose() {
//        limpar(Arrays.asList(nome, endereco, cidade, cep, email, telefone));
        editarPet = null;
        super.dispose(); //To change body of generated methods, choose Tools | Templates.
    }

    private void limpar(List<JComponent> unit) {
        for (JComponent jComponent : unit) {
            if (jComponent instanceof JTextField) {
                ((JTextField) jComponent).setText(null);
            }

            if (jComponent instanceof JFormattedTextField) {
                ((JFormattedTextField) jComponent).setValue(null);
                ((JFormattedTextField) jComponent).setText(null);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alterar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPet = new javax.swing.JTable();
        nome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        genero = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        formato.setMaximumIntegerDigits(3);
        formato.setMinimumIntegerDigits(2);
        idade = new JFormattedTextField(formato);
        jLabel7 = new javax.swing.JLabel();
        nomeUsuario = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        buscarUsuario = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaUsuario = new javax.swing.JTable();

        setClosable(true);
        setTitle("Editar Pet");
        setToolTipText("");

        alterar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        alterar.setText("ALTERAR PET");
        alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarActionPerformed(evt);
            }
        });

        excluir.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        excluir.setText("EXCLUIR PET");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        tabelaPet.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabelaPet.setModel(modeloPet);
        tabelaPet.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabelaPet);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setText("NOME:");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setText("GÊNERO: ");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setText("IDADE: ");

        idade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel7.setText("PET:");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel8.setText("USUÁRIO: ");

        buscarUsuario.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buscarUsuario.setText("BUSCAR");
        buscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarUsuarioActionPerformed(evt);
            }
        });

        tabelaUsuario.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabelaUsuario.setModel(modeloUsuario);
        tabelaUsuario.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaUsuarioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaUsuario);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(alterar)
                                .addGap(65, 65, 65)
                                .addComponent(excluir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genero, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idade, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(buscarUsuario))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buscarUsuario))
                    .addComponent(jLabel8))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alterar)
                    .addComponent(excluir))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        // TODO add your handling code here:
        if (tabelaPet.getSelectedRow() != -1 && !listaPets.isEmpty()) {
            Pet modificado = modeloPet.getRow(tabelaPet.getSelectedRow());

            ReservaDAO rdao = new ReservaDAO(JpaUtil.getEM());

            List<Reserva> reservas = rdao.listarReservas(modificado);

            if (reservas != null) {
                reservas.forEach((reserva) -> {
                    rdao.removerReserva(reserva);
                });
            }
            pdao.removerPet(modificado);
            modeloPet.removeRow(tabelaPet.getSelectedRow());
            
            JOptionPane.showMessageDialog(null, "Exclusão realizada com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Pet cadastrado!");
        }

    }//GEN-LAST:event_excluirActionPerformed

    private void alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarActionPerformed
        // TODO add your handling code here:

        if (tabelaPet.getSelectedRow() != -1 && !listaPets.isEmpty()) {
            boolean verificar = false;
            Pet modificado = modeloPet.getRow(tabelaPet.getSelectedRow());

            if (!nome.getText().isEmpty()) {
                modificado.setNome(nome.getText());
                modeloPet.setValueAt(nome.getText(), tabelaPet.getSelectedRow(), 1);
                verificar = true;

            }

            if (idade.getValue() != null) {
                int idd = ((Number) idade.getValue()).intValue();
                modificado.setIdade(idd);
                modeloPet.setValueAt(idd, tabelaPet.getSelectedRow(), 2);
                verificar = true;
            }

            if (!genero.getText().isEmpty()) {
                modificado.setGenero(genero.getText());
                modeloPet.setValueAt(genero.getText(), tabelaPet.getSelectedRow(), 3);
                verificar = true;

            }

            if (verificar) {
                pdao.atualizarPet(modificado);
                limpar(Arrays.asList(nome, genero, idade));
                JOptionPane.showMessageDialog(null, "Alteração(ões) realizada(s) com sucesso !");

            } else {
                limpar(Arrays.asList(nome, genero, idade));
                JOptionPane.showMessageDialog(null, "Verifique os campos antes de tentar alterar!");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Verifique se existe ou foi selecionado algum pet!");
        }
    }//GEN-LAST:event_alterarActionPerformed

    private void buscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarUsuarioActionPerformed
        // TODO add your handling code here:
        if (!nomeUsuario.getText().isEmpty()) {
            List<Usuario> aux = udao.listarUsuarios(nomeUsuario.getText());

            if (!aux.isEmpty()) {
                modeloUsuario = new UsuarioTableModel(aux);
                tabelaUsuario.setModel(modeloUsuario);
            } else {
                JOptionPane.showMessageDialog(null, "Usuario " + nomeUsuario.getText() + " não foi encontrado!");
                nomeUsuario.setText(null);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Verifique o campo antes de tentar realizar uma busca!");
        }
    }//GEN-LAST:event_buscarUsuarioActionPerformed

    private void tabelaUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaUsuarioMouseClicked
        // TODO add your handling code here:
        if (tabelaUsuario.getSelectedRow() != -1) {
            Usuario usr = modeloUsuario.getRow(tabelaUsuario.getSelectedRow());
            modeloPet = new PetTableModel(usr.getPets());
            tabelaPet.setModel(modeloPet);

            if (!tabelaPet.isVisible()) {
                tabelaPet.setVisible(true);
            }

        }
    }//GEN-LAST:event_tabelaUsuarioMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterar;
    private javax.swing.JButton buscarUsuario;
    private javax.swing.JButton excluir;
    private javax.swing.JTextField genero;
    private javax.swing.JFormattedTextField idade;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField nomeUsuario;
    private javax.swing.JTable tabelaPet;
    private javax.swing.JTable tabelaUsuario;
    // End of variables declaration//GEN-END:variables

}
