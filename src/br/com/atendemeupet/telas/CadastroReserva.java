/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atendemeupet.telas;

import br.com.atendemeupet.dao.LojaDAO;
import br.com.atendemeupet.dao.PetDAO;
import br.com.atendemeupet.dao.ReservaDAO;
import br.com.atendemeupet.dao.ServicoDAO;
import br.com.atendemeupet.dao.UsuarioDAO;
import br.com.atendemeupet.entidades.Loja;
import br.com.atendemeupet.entidades.Pet;
import br.com.atendemeupet.entidades.Reserva;
import br.com.atendemeupet.entidades.Servico;
import br.com.atendemeupet.entidades.Usuario;
import br.com.atendemeupet.exceptions.EntidadeException;
import br.com.atendemeupet.modelos.LojaTableModel;
import br.com.atendemeupet.modelos.PetTableModel;
import br.com.atendemeupet.modelos.ServicoTableModel;
import br.com.atendemeupet.modelos.UsuarioTableModel;
import br.com.atendemeupet.util.JpaUtil;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Rafael Vieira
 */
public class CadastroReserva extends javax.swing.JInternalFrame {

    private static CadastroReserva cadastroReserva;
    private UsuarioDAO udao = new UsuarioDAO(JpaUtil.getEM());
    private LojaDAO ldao = new LojaDAO(JpaUtil.getEM());
    private PetDAO pdao = new PetDAO(JpaUtil.getEM());
    private ServicoDAO sdao = new ServicoDAO(JpaUtil.getEM());
    private ReservaDAO rdao = new ReservaDAO(JpaUtil.getEM());

    private List<Usuario> listaUsuarios = udao.listarUsuariosPets();
    private UsuarioTableModel modeloUsuario = new UsuarioTableModel(listaUsuarios);

    private List<Pet> listaPets = pdao.listarPets();
    private PetTableModel modeloPet = new PetTableModel(listaPets);

    private List<Servico> listaServicos = sdao.listarServicosLojas();
    private ServicoTableModel modeloServico = new ServicoTableModel(listaServicos);

    private List<Loja> listaLoja = ldao.listarLojas();
    private LojaTableModel modeloLoja = new LojaTableModel(listaLoja);

    private List<Servico> listaServicosReserva = new ArrayList<>();

    /**
     * Creates new form CriarReserva
     */
    private CadastroReserva() {
        initComponents();
        tabelaPet.setVisible(false);
        tabelaLoja.setVisible(false);
    }

    public static synchronized CadastroReserva getInstance() {
        if (cadastroReserva == null) {
            cadastroReserva = new CadastroReserva();
        }
        return cadastroReserva;
    }

    @Override
    public void dispose() {
        cadastroReserva = null;
        super.dispose(); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaUsuario = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        buscarUsuario = new javax.swing.JButton();
        nomeUsuario = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaPet = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaServico = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaLoja = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        criarReserva = new javax.swing.JButton();
        cadastrarReserva = new javax.swing.JButton();

        setClosable(true);
        setTitle("Cadastro de Reserva");

        tabelaUsuario.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabelaUsuario.setModel(modeloUsuario);
        tabelaUsuario.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaUsuario);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setText("USUÁRIO: ");

        buscarUsuario.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buscarUsuario.setText("BUSCAR");
        buscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarUsuarioActionPerformed(evt);
            }
        });

        tabelaPet.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabelaPet.setModel(modeloPet);
        tabelaPet.setRowSelectionAllowed(true);
        tabelaPet.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tabelaPet);

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setText("PET:");

        tabelaServico.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabelaServico.setModel(modeloServico);
        tabelaServico.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaServicoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaServico);

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel7.setText("SERVIÇO:");

        tabelaLoja.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabelaLoja.setModel(modeloLoja);
        tabelaLoja.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(tabelaLoja);

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel8.setText("LOJA: ");

        criarReserva.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        criarReserva.setText("ADICIONAR");
        criarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarReservaActionPerformed(evt);
            }
        });

        cadastrarReserva.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        cadastrarReserva.setText("RESERVAR");
        cadastrarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarReservaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(buscarUsuario))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(185, 185, 185)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(230, 230, 230))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(5, 5, 5)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(criarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cadastrarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buscarUsuario))
                    .addComponent(jLabel5))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(criarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cadastrarReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarUsuarioActionPerformed
        // TODO add your handling code here:
        if (!nomeUsuario.getText().isEmpty()) {
            List<Usuario> aux = udao.listarUsuarios(nomeUsuario.getText());

            if (!aux.isEmpty()) {
                modeloUsuario = new UsuarioTableModel(aux);
                tabelaUsuario.setModel(modeloUsuario);
            } else {
                JOptionPane.showMessageDialog(null, "Usuario " + nomeUsuario.getText() + " não foi encontrado!");
                nomeUsuario.setText(null);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Verifique o campo antes de tentar realizar uma busca!");
        }
    }//GEN-LAST:event_buscarUsuarioActionPerformed

    private void tabelaUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaUsuarioMouseClicked
        // TODO add your handling code here:
        if (tabelaUsuario.getSelectedRow() != -1) {
            Usuario usr = modeloUsuario.getRow(tabelaUsuario.getSelectedRow());
            modeloPet = new PetTableModel(usr.getPets());
            tabelaPet.setModel(modeloPet);

            if (!tabelaPet.isVisible()) {
                tabelaPet.setVisible(true);
            }

        }
    }//GEN-LAST:event_tabelaUsuarioMouseClicked

    private void tabelaServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaServicoMouseClicked
        // TODO add your handling code here:
        if (tabelaServico.getSelectedRow() != -1) {
            Servico serv = modeloServico.getRow(tabelaServico.getSelectedRow());
            modeloLoja = new LojaTableModel(serv.getLojas());
            tabelaLoja.setModel(modeloLoja);

            if (!tabelaLoja.isVisible()) {
                tabelaLoja.setVisible(true);
            }

        }
    }//GEN-LAST:event_tabelaServicoMouseClicked

    private void criarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarReservaActionPerformed
        // TODO add your handling code here:
        if (tabelaUsuario.getSelectedRow() != -1 && tabelaLoja.getSelectedRow() != -1 && tabelaPet.getSelectedRow() != -1
                && tabelaServico.getSelectedRow() != -1) {
            
            Servico servico = modeloServico.getRow(tabelaServico.getSelectedRow());
            
            try {
                if(listaServicosReserva.contains(servico)){
                    throw new EntidadeException("Esse serviço já foi adicionado!");
                }else{
                    listaServicosReserva.add(servico);
                }
                
            } catch (EntidadeException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
                return;
            }
           
            
            JOptionPane.showMessageDialog(null, "ATENÇÃO! Serviços ofertados por lojas distintas não serão adicionados,"
                    + " cada reserva é exclusiva de uma única loja!","ATENÇÃO!",JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione o(s) campo(s) antes de tentar adicionar! ");
        }
    }//GEN-LAST:event_criarReservaActionPerformed

    private void cadastrarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarReservaActionPerformed
        // TODO add your handling code here:
        if (tabelaUsuario.getSelectedRow() != -1 && tabelaLoja.getSelectedRow() != -1 && tabelaPet.getSelectedRow() != -1
                && tabelaServico.getSelectedRow() != -1 && !listaServicosReserva.isEmpty()) {
            Reserva reserva = new Reserva(Calendar.getInstance());

            reserva.setUsuario(modeloUsuario.getRow(tabelaUsuario.getSelectedRow()));
            reserva.setPet(modeloPet.getRow(tabelaPet.getSelectedRow()));
            reserva.setLoja(modeloLoja.getRow(tabelaLoja.getSelectedRow()));

            List<Servico> verificaServico = new ArrayList<>();

            for (Servico servico : listaServicosReserva) {
                if (reserva.getLoja().getServicos().contains(servico)) {
                    verificaServico.add(servico);
                }
            }

            reserva.setServicos(verificaServico);

            rdao.inserirReserva(reserva);

            if (reserva.getUsuario().getReservas() == null) {
                List<Reserva> reservasUsuario = new ArrayList<>();
                reservasUsuario.add(reserva);
                reserva.getUsuario().setReservas(reservasUsuario);
            } else {
                reserva.getUsuario().getReservas().add(reserva);
            }

            udao.atualizarUsuario(reserva.getUsuario());

            if (reserva.getLoja().getReservas() == null) {
                List<Reserva> reservasLoja = new ArrayList<>();
                reservasLoja.add(reserva);
                reserva.getLoja().setReservas(reservasLoja);
            } else {
                reserva.getLoja().getReservas().add(reserva);
            }

            ldao.atualizarLoja(reserva.getLoja());

            for (Servico listaServs : listaServicosReserva) {
                if (listaServs.getReservas() == null) {
                    List<Reserva> reservas = new ArrayList<>();
                    reservas.add(reserva);
                    listaServs.setReservas(reservas);
                } else {
                    listaServs.getReservas().add(reserva);
                }
                sdao.atualizarServico(listaServs);
            }
            
            JOptionPane.showMessageDialog(null, "Reserva realizada com sucesso!");
            dispose();
        }else{
             JOptionPane.showMessageDialog(null, "Verifique os campos antes de tentar confirmar uma reserva!");
        }
    }//GEN-LAST:event_cadastrarReservaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarUsuario;
    private javax.swing.JButton cadastrarReserva;
    private javax.swing.JButton criarReserva;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nomeUsuario;
    private javax.swing.JTable tabelaLoja;
    private javax.swing.JTable tabelaPet;
    private javax.swing.JTable tabelaServico;
    private javax.swing.JTable tabelaUsuario;
    // End of variables declaration//GEN-END:variables
}
