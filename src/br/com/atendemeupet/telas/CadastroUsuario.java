/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atendemeupet.telas;

import br.com.atendemeupet.dao.UsuarioDAO;
import br.com.atendemeupet.entidades.Endereco;
import br.com.atendemeupet.entidades.Usuario;
import br.com.atendemeupet.exceptions.CampoException;
import br.com.atendemeupet.exceptions.EntidadeException;
import br.com.atendemeupet.util.JpaUtil;
import java.text.ParseException;
import java.util.Arrays;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Rafael Vieira
 */
public class CadastroUsuario extends javax.swing.JInternalFrame {

    private static CadastroUsuario cadastroUsuario;

    private UsuarioDAO dao = new UsuarioDAO(JpaUtil.getEM());

    @Override
    public void dispose() {
        cadastroUsuario = null;
        super.dispose(); //To change body of generated methods, choose Tools | Templates.
    }

    private void limpar(List<JComponent> unit) {
        for (JComponent jComponent : unit) {
            if (jComponent instanceof JTextField) {
                ((JTextField) jComponent).setText(null);
            }

            if (jComponent instanceof JFormattedTextField) {
                ((JFormattedTextField) jComponent).setValue(null);
                ((JFormattedTextField) jComponent).setText(null);
            }
        }
    }

    private void continuar() {
        OUTER:
        while (true) {
            String resposta = JOptionPane.showInputDialog("Deseja continuar cadastrando? [S/N]");

            if (resposta == null) {
                JOptionPane.showMessageDialog(null, "Operação cancelada!");
                dispose();
                break;
            }

            switch (resposta) {
                case "S":
                    limpar(Arrays.asList(nome, cpf, email, endereco, cidade, cep, telefone));
                    break OUTER;
                case "N":
                    JOptionPane.showMessageDialog(null, "Operação cancelada!");
                    dispose();
                    break OUTER;
                default:
                    JOptionPane.showMessageDialog(null, "Opção inválida! - Tente usar S ou N.");

            }
        }
    }

    private CadastroUsuario() {
        initComponents();

    }

    public static CadastroUsuario getInstance() {
        if (cadastroUsuario == null) {
            cadastroUsuario = new CadastroUsuario();
        }
        return cadastroUsuario;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        endereco = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cidade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cpf = new javax.swing.JFormattedTextField();
        cep = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        telefone = new javax.swing.JFormattedTextField();
        cadastrar = new javax.swing.JButton();
        nome = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Cadastro de Usuário");

        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel1.setText("CPF: ");

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setText("E-MAIL");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setText("NOME:");

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setText("ENDEREÇO: ");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel7.setText("CIDADE: ");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel8.setText("CEP:");

        try {
            cpf.setFormatterFactory(new DefaultFormatterFactory(
                new MaskFormatter("###.###.###-##")));
    } catch (ParseException e) {
        e.printStackTrace();
    }
    cpf.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cpfActionPerformed(evt);
        }
    });

    try {
        cep.setFormatterFactory(new DefaultFormatterFactory(
            new MaskFormatter("#####-###")));
    } catch (ParseException e) {
        e.printStackTrace();
    }

    jLabel9.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
    jLabel9.setText("TELEFONE: ");

    try {
        telefone.setFormatterFactory(new DefaultFormatterFactory(
            new MaskFormatter("(##)#####-####")));
    } catch (ParseException e) {
        e.printStackTrace();
    }

    cadastrar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
    cadastrar.setText("CADASTRAR");
    cadastrar.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cadastrarActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(endereco, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cidade, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cep, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                    .addGap(172, 172, 172)
                    .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(32, 32, 32)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(jLabel1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4)
                .addComponent(jLabel6))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(endereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel7)
                .addComponent(jLabel8)
                .addComponent(jLabel9))
            .addGap(11, 11, 11)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(27, 27, 27)
            .addComponent(cadastrar)
            .addContainerGap(45, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        // TODO add your handling code here:
        try {
            if (nome.getText().length() < 5 || nome.getText().isEmpty()) {
                nome.setText(null);
                throw new CampoException("Verifique o campo: Nome !");
            }

            if (cpf.getValue() == null) {
                cpf.setValue(null);
                throw new CampoException("Verifique o campo: CPF !");
            }

            if (email.getText().length() < 5 || email.getText().isEmpty()) {
                email.setText(null);
                throw new CampoException("Verifique o campo: Email !");
            }

            if (endereco.getText().length() < 5 || endereco.getText().isEmpty()) {
                endereco.setText(null);
                throw new CampoException("Verifique o campo: Endereço !");
            }

            if (cidade.getText().length() < 5 || cidade.getText().isEmpty()) {
                cidade.setText(null);
                throw new CampoException("Verifique o campo: Cidade !");
            }

            if (cep.getValue() == null) {
                throw new CampoException("Verifique o campo: CEP !");
            }

            if (telefone.getValue() == null) {
                throw new CampoException("Verifique o campo: Telefone !");
            }

            Endereco end = new Endereco(endereco.getText(), cidade.getText(), cep.getText());

            Usuario usuario = new Usuario(nome.getText(), (String)cpf.getValue(), end, email.getText(), telefone.getText());

            List<Usuario> listaUsuarios = dao.listarUsuarios();

            if (listaUsuarios.isEmpty()) {
                dao.inserirUsuario(usuario);
                JOptionPane.showMessageDialog(null, "Usuario Cadastrado com sucesso! ");
                continuar();
            } else {
                for (Usuario listaUsuario : listaUsuarios) {
                    if (usuario.equals(listaUsuario)) {
                        throw new EntidadeException("Esse Usuario já foi cadastrado!");
                    }
                }
                dao.inserirUsuario(usuario);
                JOptionPane.showMessageDialog(null, "Usuario Cadastrado com sucesso! ");
                continuar();

            }

        } catch (CampoException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        } catch (EntidadeException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
            continuar();
        }

    }//GEN-LAST:event_cadastrarActionPerformed

    private void cpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JFormattedTextField cep;
    private javax.swing.JTextField cidade;
    private javax.swing.JFormattedTextField cpf;
    private javax.swing.JTextField email;
    private javax.swing.JTextField endereco;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField nome;
    private javax.swing.JFormattedTextField telefone;
    // End of variables declaration//GEN-END:variables

}
