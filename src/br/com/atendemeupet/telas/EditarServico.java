/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atendemeupet.telas;

import br.com.atendemeupet.dao.LojaDAO;
import br.com.atendemeupet.dao.ServicoDAO;
import br.com.atendemeupet.entidades.Loja;
import br.com.atendemeupet.entidades.Servico;
import br.com.atendemeupet.modelos.ServicoTableModel;
import br.com.atendemeupet.util.JpaUtil;
import java.text.NumberFormat;
import java.util.Arrays;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Rafael Vieira
 */
public class EditarServico extends javax.swing.JInternalFrame {

    /**
     * Creates new form EditarServico
     */
    private static EditarServico editarServico;
    
    private ServicoDAO dao = new ServicoDAO(JpaUtil.getEM());
    private List<Servico> listaServicos = dao.listarServicos();
    private ServicoTableModel modelo = new ServicoTableModel(listaServicos);
    
    private EditarServico() {
        initComponents();
        
    }
    
    public static synchronized EditarServico getInstance() {
        if (editarServico == null) {
            editarServico = new EditarServico();
        }
        return editarServico;
    }
    
    @Override
    public void dispose() {
//        limpar(Arrays.asList(nome, endereco, cidade, cep, email, telefone));
        editarServico = null;
        super.dispose(); //To change body of generated methods, choose Tools | Templates.
    }
    
    private void limpar(List<JComponent> unit) {
        for (JComponent jComponent : unit) {
            if (jComponent instanceof JTextField) {
                ((JTextField) jComponent).setText(null);
            }
            
            if (jComponent instanceof JFormattedTextField) {
                ((JFormattedTextField) jComponent).setValue(null);
                ((JFormattedTextField) jComponent).setText(null);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alterar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        tipo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Editar Serviço");
        setToolTipText("");

        alterar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        alterar.setText("ALTERAR SERVIÇO");
        alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarActionPerformed(evt);
            }
        });

        excluir.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        excluir.setText("EXCLUIR SERVIÇO");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        tabela.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabela.setModel(modelo);
        tabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabela);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setText("TIPO: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(alterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(excluir)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alterar)
                    .addComponent(excluir))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        // TODO add your handling code here:
        if (tabela.getSelectedRow() != -1 && !listaServicos.isEmpty()) {
            LojaDAO ldao = new LojaDAO(JpaUtil.getEM());
            Servico servico = modelo.removeRow(tabela.getSelectedRow());
            
            for (Loja loja : servico.getLojas()) {
                loja.getServicos().remove(servico);
                ldao.atualizarLoja(loja);
            }
            
            dao.removerServico(servico);
            JOptionPane.showMessageDialog(null, "Exclusão realizada com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Servico cadastrado!");
        }

    }//GEN-LAST:event_excluirActionPerformed

    private void alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarActionPerformed
        // TODO add your handling code here:

        if (tabela.getSelectedRow() != -1 && !listaServicos.isEmpty()) {
            boolean verificar = false;
            Servico modificado;
            modificado = listaServicos.get(tabela.getSelectedRow());
            
            if (!tipo.getText().isEmpty()) {
                modificado.setTipo(tipo.getText());
                modelo.setValueAt(tipo.getText(), tabela.getSelectedRow(), 1);
                verificar = true;
                
            }
            
            if (verificar) {
                dao.atualizarServico(modificado);
                limpar(Arrays.asList(tipo));
                JOptionPane.showMessageDialog(null, "Alteração(ões) realizada(s) com sucesso !");
                
            } else {
                limpar(Arrays.asList(tipo));
                JOptionPane.showMessageDialog(null, "Verifique os campos antes de tentar alterar!");
            }
            
        } else {
            JOptionPane.showMessageDialog(null, "Verifique se existe ou foi selecionado algum serviço!");
        }
    }//GEN-LAST:event_alterarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterar;
    private javax.swing.JButton excluir;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField tipo;
    // End of variables declaration//GEN-END:variables

}
