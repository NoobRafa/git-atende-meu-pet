/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.atendemeupet.telas;

import br.com.atendemeupet.dao.PetDAO;
import br.com.atendemeupet.dao.UsuarioDAO;
import br.com.atendemeupet.entidades.Pet;
import br.com.atendemeupet.entidades.Usuario;
import br.com.atendemeupet.exceptions.CampoException;
import br.com.atendemeupet.modelos.UsuarioTableModel;
import br.com.atendemeupet.util.JpaUtil;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Rafael Vieira
 */
public class CadastroPet extends javax.swing.JInternalFrame {

    private static CadastroPet cadastroPet;
    private UsuarioDAO udao = new UsuarioDAO(JpaUtil.getEM());
    private PetDAO pdao = new PetDAO(JpaUtil.getEM());
    private List<Usuario> listaUsuarios = udao.listarUsuarios();
    private UsuarioTableModel modelo = new UsuarioTableModel(listaUsuarios);
    private NumberFormat formato = NumberFormat.getNumberInstance();

    private CadastroPet() {
        initComponents();
    }

    @Override
    public void dispose() {
        cadastroPet = null;
        super.dispose(); //To change body of generated methods, choose Tools | Templates.
    }

    public static synchronized CadastroPet getInstance() {
        if (cadastroPet == null) {
            cadastroPet = new CadastroPet();
        }
        return cadastroPet;
    }

    private void limpar(List<JComponent> unit) {
        for (JComponent jComponent : unit) {
            if (jComponent instanceof JTextField) {
                ((JTextField) jComponent).setText(null);
            }

            if (jComponent instanceof JFormattedTextField) {
                ((JFormattedTextField) jComponent).setValue(null);
                ((JFormattedTextField) jComponent).setText(null);
            }
        }
    }

    private void continuar() {
        OUTER:
        while (true) {
            String resposta = JOptionPane.showInputDialog("Deseja continuar ? [S/N]");

            if (resposta == null) {
                JOptionPane.showMessageDialog(null, "Operação cancelada!");
                dispose();
                break;
            }

            switch (resposta) {
                case "S":
                    limpar(Arrays.asList(nome, genero, idade, nomeUsuario));
                    modelo = new UsuarioTableModel(listaUsuarios);
                    tabela.setModel(modelo);
                    break OUTER;
                case "N":
                    JOptionPane.showMessageDialog(null, "Operação cancelada!");
                    dispose();
                    break OUTER;
                default:
                    JOptionPane.showMessageDialog(null, "Opção inválida! - Tente usar S ou N.");

            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        nomeUsuario = new javax.swing.JTextField();
        buscarUsuario = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        genero = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        formato.setMaximumIntegerDigits(3);
        formato.setMinimumIntegerDigits(2);
        idade = new JFormattedTextField(formato);
        cadastrar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Cadastro de Pet");

        tabela.setFont(new java.awt.Font("Trebuchet MS", 1, 12)); // NOI18N
        tabela.setModel(modelo);
        tabela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabela);

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setText("USUÁRIO: ");

        buscarUsuario.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        buscarUsuario.setText("BUSCAR");
        buscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarUsuarioActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setText("NOME:");

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel7.setText("GÊNERO: ");

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel8.setText("IDADE: ");

        idade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));

        cadastrar.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        cadastrar.setText("CADASTRAR");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idade, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(genero, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(294, 294, 294))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(buscarUsuario))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(111, 111, 111))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(nomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarUsuario))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(idade, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(cadastrar)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarUsuarioActionPerformed
        // TODO add your handling code here:
        if (!nomeUsuario.getText().isEmpty()) {
            List<Usuario> aux = udao.listarUsuarios(nomeUsuario.getText());

            if (!aux.isEmpty()) {
                modelo = new UsuarioTableModel(aux);
                tabela.setModel(modelo);
            } else {
                JOptionPane.showMessageDialog(null, "Usuario " + nomeUsuario.getText() + " não foi encontrado!");
                nomeUsuario.setText(null);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Verifique o campo antes de tentar realizar uma busca!");
        }

    }//GEN-LAST:event_buscarUsuarioActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        // TODO add your handling code here:

        if (tabela.getSelectedRow() != -1) {
            try {
                if (nome.getText().isEmpty()) {
                    throw new CampoException("Verifique o campo: Nome !");
                }

                if (idade.getValue() == null) {
                    idade.setValue(null);
                    throw new CampoException("Verifique o campo: Idade !");
                }

                if (genero.getText().isEmpty()) {
                    throw new CampoException("Verifique o campo: Gênero !");
                }

                int idd = ((Number) idade.getValue()).intValue();

                Pet pet = new Pet(nome.getText(), genero.getText(), idd);

                Usuario usuario = modelo.getRow(tabela.getSelectedRow());

                pet.setUsuario(usuario);

                pdao.inserirPet(pet);

                if (usuario.getPets() == null) {
                    List<Pet> pets = new ArrayList<>();
                    pets.add(pet);
                    usuario.setPets(pets);
                } else {
                    usuario.getPets().add(pet);
                }

                udao.atualizarUsuario(usuario);

                JOptionPane.showMessageDialog(null, "Cadastro de Pet realizado com sucesso!");
                continuar();

            } catch (CampoException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }else{
             JOptionPane.showMessageDialog(null, "Selecione um usuário primeiro para cadastrar o pet!");
        }


    }//GEN-LAST:event_cadastrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarUsuario;
    private javax.swing.JButton cadastrar;
    private javax.swing.JTextField genero;
    private javax.swing.JFormattedTextField idade;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField nomeUsuario;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
